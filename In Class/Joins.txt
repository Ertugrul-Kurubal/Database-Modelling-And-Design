-- INNER JOIN

SELECT A.product_id, A.product_name, A.category_id, B.category_name 
FROM production.products A
INNER JOIN production.categories B
ON A.category_id = B.category_id
;

SELECT A.product_id, A.product_name, A.category_id, B.category_name 
FROM production.products A, production.categories B
WHERE A.category_id = B.category_id
; --This is other type

-- Mağaza çalışanlarını çalıştıkları mağaza bilgileriyle birlikte listeleyin
-- Çalışan adı, soyadı, mağaza adlarını seçin

SELECT A.first_name, A.last_name, B.store_name FROM [sales].[staffs] A, [sales].[stores] B
WHERE A.store_id = B.store_id
;

-- LEFT JOIN

SELECT A.product_id, A.product_name, A.category_id, B.category_name 
FROM production.products A  -- This is left table
LEFT JOIN production.categories B
ON A.category_id = B.category_id
;

-- Ürün bilgilerini stok miktarları ile birlikte listeleyin
--		Stokta bulunmayan ürünlerin bilgileri de gelsin istiyoruz
--		ProductID si 310 dan büyük olan ürünleri getirin
--		ProductID, ProductName ve stok bilgilerini seçin
-- Bu sorguyu INNER JOIN ile yapsaydınız nasıl bir farklılık olurdu?

SELECT A.product_id, A.product_name, B.* 
FROM production.products A  -- This is left table
LEFT JOIN [production].[stocks] B
ON A.product_id = B.product_id
;

SELECT A.product_id, A.product_name, B.* 
FROM production.products A  -- This is left table
LEFT JOIN [production].[stocks] B
ON A.product_id = B.product_id AND 
A.product_id > 310
;

SELECT A.product_id, A.product_name, B.* 
FROM production.products A  -- This is left table
LEFT JOIN [production].[stocks] B
ON A.product_id = B.product_id
WHERE A.product_id > 310
;

-- RIGHT JOIN

-- Stok miktarları ile ilgili LEFT JOIN ile yaptığınız sorguyu RIGHT JOIN ile yapın
-- Her iki sorgu sonucunun da aynı olmasını sağlayın (satır sayısı, sütun sıralaması vs.)

SELECT A.product_id, A.product_name, B.* 
FROM [production].[stocks] B  
RIGHT JOIN  production.products A -- This is right table
ON A.product_id = B.product_id
WHERE A.product_id > 310
;

-- Mağaza çalışanlarını yaptıkları satışlar ile birlikte listeleyin
-- Hiç satış yapmayan çalışan varsa onların da gelmesini istiyoruz.
-- Staff ID, Staff adı, soyadı ve sipariş bilgilerini seçin
-- Sonucu daha iyi analiz edebilmek için sorguyu Staff ID alanına göre sıralayın.

SELECT A.staff_id, A.first_name, A.last_name, B.* 
FROM [sales].[orders] B
RIGHT JOIN [sales].[staffs] A
ON A.staff_id = B.staff_id
ORDER BY A.staff_id
;

-- FULL OUTER JOIN

-- Ürünlerin stok miktarları ve sipariş bilgilerini birlikte listeleyin
-- production.stocks ve sales.order_items tablolarını kullanın
-- Sorgu sonucunda bütün sütunların gelmesini sağlayın
-- Çıkan sonucu daha kolay yorumlamak için product_id ve order_id alanlarına göre sıralayın

SELECT * 
FROM [sales].[order_items] A
FULL OUTER JOIN [production].[stocks] B
ON A.product_id = B.Product_id
ORDER BY A.product_id, A.order_id

-- CROSS JOIN

-- Hangi markada hangi kategoride kaçar ürün olduğu bilgisine ihtiyaç duyuluyor
-- Ürün sayısı hesaplamadan sadece marka * kategori ihtimallerinin hepsini içeren bir tablo oluşturun.
-- Çıkan sonucu daha kolay yorumlamak için brand_id ve category_id alanlarına göre sıralayın

SELECT * 
FROM production.brands A
CROSS JOIN production.categories B
ORDER BY A.brand_id, B.category_id

-- Bazı ürünlerin stok bilgileri stocks tablosunda yok.
-- Bu ürünlerin herbir mağazada 0 adet olacak şekilde stocks tablosuna basılması isteniyor.
-- Bunu nasıl yaparsınız?
-- Örneğin product_id = 314 olan ürünün stok bilgilerini kontrol edebilirsiniz
-- Sadece stock tablosuna basılacak listeyi oluşturun, INSERT etmeyin

SELECT B.store_id, A.product_id, 0 quantity
FROM production.products A
CROSS JOIN sales.stores B
WHERE A.product_id NOT IN (SELECT product_id FROM production.stocks)
ORDER BY A.product_id, B.store_id

-- SELF JOIN
-- Personelleri ve şefleri listeleyin

SELECT A.first_name staff_name,
       B.first_name manager_name
FROM sales.staffs A
JOIN sales.staffs B
ON A.manager_id = B.staff_id
;

SELECT A.first_name staff_name,
       B.first_name manager_name
FROM sales.staffs A, sales.staffs B
WHERE A.manager_id = B.staff_id
;

-- Bir önceki sorgu sonucunda gelen şeflerin yanına onların da şeflerini getiriniz
-- Çalışan adı, şef adı, şefin şefinin adı bilgilerini getirin

SELECT A.first_name staff_name,
       B.first_name manager_name,
	   C.first_name managers_manager_name
FROM sales.staffs A, sales.staffs B, sales.staffs C
WHERE A.manager_id = B.staff_id AND
	  B.manager_id = C.staff_id
;

-- Breakout Session Sorular:
-- Soru 1: Bir liste oluşturun ve bu listede ürün adı, model yılı, fiyatı, kategorisi ve markası bulunsun.
-- Soru 2: -- Bu liste oluşturun ve bu listede çalışan adı soyadı, sipariş tarihi, müşteri adı soyadı bulunsun.
-- Bu listede tüm çalışanların olmasını sağlayın fakat müşterilerden sadece sipariş verenler bulunsun.

-- Q1 1-way
SELECT A.product_name, A.model_year, A.list_price, B.category_name, C.brand_name FROM production.products A
INNER JOIN production.categories B
ON A.category_id = B.category_id
INNER JOIN production.brands C
ON A.brand_id = C.brand_id

-- Q2 1-way
SELECT A.first_name, A.last_name, B.order_date, C.first_name, C.last_name FROM sales.staffs A
LEFT JOIN sales.orders B
ON A.staff_id = B.staff_id
LEFT JOIN sales.customers C
ON B.customer_id = C.customer_id

-- Q1 2-way
SELECT A.product_name, A.model_year, A.list_price, B.category_name, C.brand_name 
FROM production.products A, production.categories B, production.brands C
WHERE A.category_id = B.category_id AND
A.brand_id = C.brand_id